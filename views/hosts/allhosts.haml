%table{:border => 0, :class => "table_list_hosts", :width => "100%"}
	%tr
		%th.host_state{:align => "center", :valign => "middle"} state
		%th.host_name{:align => "center", :valign => "middle"} Host
		%th.host_icon{:align => "center", :valign => "middle"} Icon
		%th.srvc_ok{:align => "center", :valign => "middle"} OK
		%th.srvc_warn{:align => "center", :valign => "middle"} Warn
		%th.srvc_unkn{:align => "center", :valign => "middle"} Unkn
		%th.srvc_crit{:align => "center", :valign => "middle"} Crit
		%th.srvc_pend{:align => "center", :valign => "middle"} Pend
		%th.nbsp{:align => "center", :valign => "middle"} &nbsp;
		%th.host_state{:align => "center", :valign => "middle"} state
		%th.host_name{:align => "center", :valign => "middle"} Host
		%th.host_icon{:align => "center", :valign => "middle"} Icon
		%th.srvc_ok{:align => "center", :valign => "middle"} OK
		%th.srvc_warn{:align => "center", :valign => "middle"} Warn
		%th.srvc_unkn{:align => "center", :valign => "middle"} Unkn
		%th.srvc_crit{:align => "center", :valign => "middle"} Crit
		%th.srvc_pend{:align => "center", :valign => "middle"} Pend
	- col = 0
	- @allhosts.each do |host|
		- host_name = host[:name].downcase.gsub(' ', '')
		- if col == 0
			<tr>
		%td{:class => "host_state_#{nagios_short_host_state_names(host[:state]).downcase}", :align => "center", :valign => "middle"}= nagios_short_host_state_names(host[:state])
		%td.host_name{:align => "center", :valign => "middle"}
			%span{:id => "show-more-host-#{host_name}"}= host[:name]
		
		%td.host_icon{:align => "center", :valign => "middle"}
			%img{:src => "http://monitorix.fr.srv.rhaamo.li/nagios3/images/logos/#{host[:icon_image]}", :alt => host[:icon_image_alt], :width => "20", :height => "20", :border => "0"}
			
		- (host[:num_services_ok] > 0) ? c_ok = "srvc_ok" : c_ok = ""
		%td{:align => "center", :valign => "middle", :class => c_ok}
			= host[:num_services_ok]
		
		- (host[:num_services_warn] > 0) ? c_warn = "srvc_warn" : c_warn = ""
		%td{:align => "center", :valign => "middle", :class => c_warn}
			= host[:num_services_warn]
		
		- (host[:num_services_unknown] > 0) ? c_unk = "srvc_unkn" : c_unk = ""
		%td{:align => "center", :valign => "middle", :class => c_unk}
			= host[:num_services_unknown]
		
		- (host[:num_services_crit] > 0) ? c_crit = "srvc_crit" : c_crit = ""
		%td{:align => "center", :valign => "middle", :class => c_crit}
			= host[:num_services_crit]
		
		- (host[:num_services_pending] > 0) ? c_pend = "srvc_pend" : c_pend = ""
		%td{:align => "center", :valign => "middle", :class => c_pend}
			= host[:num_services_pending]
		
		- if col == 0
			%td.nbsp{:align => "center", :valign => "middle"} &nbsp;
		- col += 1
		- if col == 2
			</tr>
			- col = 0



- @allhosts.each do |host|
	%script{:type => "text/javascript"}
		\//<![CDATA[
		- host_name = host[:name].downcase.gsub(' ', '')
		= "$('#show-more-host-#{host_name}').trackStar( { displayID: 'overlay-host-#{host_name}' } ) ;"
		\//]]>

	%div{:id => "overlay-host-#{host_name}", :class => "hidden-overlay"}
		Last check:
		= Time.at(host[:last_check])
		%br
		Duration:
		- last_state_change = host[:last_state_change]  # timestamp
		- last_check        = host[:last_check] # timestamp
		- time_elap = time_elapsed(last_state_change, last_check)
		- t_e = ""
		- if time_elap[:weeks] > 0
			- t_e = "#{time_elap[:weeks]}w "
		- if time_elap[:days] > 0
			- t_e << "#{time_elap[:days]}d "
		- if time_elap[:hours] > 0
			- t_e << "#{time_elap[:hours]}h "
		- if time_elap[:minutes] > 0
			- t_e << "#{time_elap[:minutes]}m "
		- if time_elap[:seconds] > 0
			- t_e << "#{time_elap[:seconds]}s"
		= t_e
		
		%br
		Status Information:
		= host[:plugin_output]
		%br


